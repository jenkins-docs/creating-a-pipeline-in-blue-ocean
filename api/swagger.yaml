---
swagger: "2.0"
info:
  description: "Request data from our smartbear library"
  version: "1.0"
  title: "SmartBear Library"
host: "virtserver.swaggerhub.com"
basePath: "/SmartBear_Software/sbLib/1.0"
schemes:
- "https"
paths:
  /books:
    get:
      tags:
      - "allUsers"
      summary: "searches books"
      description: "Returns array based on book search params."
      operationId: "booksGET"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "query"
        description: "title search parameter"
        required: false
        type: "string"
      - name: "author"
        in: "query"
        description: "author search parameter"
        required: false
        type: "string"
      responses:
        200:
          description: "book successfully created"
          schema:
            $ref: "#/definitions/Books"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
      x-swagger-router-controller: "AllUsers"
  /books/{id}:
    get:
      tags:
      - "allUsers"
      summary: "returns book object"
      description: "Returns array based of search params."
      operationId: "booksIdGET"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "book id"
        required: true
        type: "integer"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            $ref: "#/definitions/inline_response_200"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
      x-swagger-router-controller: "AllUsers"
  /authors:
    get:
      tags:
      - "allUsers"
      summary: "searches authors"
      description: "Returns array based on author search params."
      operationId: "authorsGET"
      produces:
      - "application/json"
      parameters:
      - name: "first_name"
        in: "query"
        description: "first name search parameter"
        required: false
        type: "string"
      - name: "last_name"
        in: "query"
        description: "last name search parameter"
        required: false
        type: "string"
      responses:
        200:
          description: "book successfully created"
          schema:
            $ref: "#/definitions/Authors"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
      x-swagger-router-controller: "AllUsers"
  /authors/{id}:
    get:
      tags:
      - "allUsers"
      summary: "returns author object"
      description: "Query for a specific author by ID."
      operationId: "authorsIdGET"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "book id"
        required: true
        type: "integer"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
      x-swagger-router-controller: "AllUsers"
definitions:
  Books:
    type: "object"
    required:
    - "results"
    - "status"
    properties:
      status:
        type: "integer"
        example: 200
      results:
        type: "array"
        example:
        - id: "101"
          title: "A Game of Thrones"
          author_id: 254
          _link: "/books/101"
        - id: "102"
          title: "A Clash of Kings"
          author_id: 254
          _link: "/books/102"
        - id: "103"
          title: "A Storm of Swords"
          author_id: 254
          _link: "/books/103"
        - id: "104"
          title: "A Feast for Crows"
          author_id: 254
          _link: "/books/104"
        items:
          type: "object"
          properties: {}
  Book:
    type: "object"
    required:
    - "_link"
    - "author"
    - "description"
    - "id"
    - "title"
    properties:
      id:
        type: "integer"
        example: 105
      title:
        type: "string"
        example: "A Game of Thrones"
      description:
        type: "string"
        example: "From a master of contemporary fantasy comes the first novel of a\
          \ landmark series..."
      author:
        $ref: "#/definitions/Author"
      _link:
        type: "string"
        example: "/books/105"
  Author:
    type: "object"
    required:
    - "_link"
    - "first_name"
    - "id"
    - "last_name"
    properties:
      id:
        type: "integer"
        example: 254
      first_name:
        type: "string"
        example: "George R.R."
      last_name:
        type: "string"
        example: "Martin"
      _link:
        type: "string"
        example: "/authors/254"
  Authors:
    type: "object"
    required:
    - "results"
    - "status"
    properties:
      status:
        type: "integer"
        example: 200
      results:
        type: "array"
        example:
        - id: "254"
          first_name: "George R.R."
          last_name: "Martin"
          _link: "/authors/254"
        - id: "255"
          first_name: "Frank"
          last_name: "Herbert"
          _link: "/authors/255"
        - id: "256"
          first_name: "Andy"
          last_name: "Weir"
          _link: "/authors/256"
        items:
          type: "object"
          properties: {}
  inline_response_404:
    properties:
      status:
        type: "integer"
        example: 404
        description: "status code"
      message:
        type: "string"
        example: "Resource not found"
        description: "status string"
  inline_response_200:
    properties:
      status:
        type: "integer"
        example: 200
        description: "status code"
      result:
        $ref: "#/definitions/Book"
  inline_response_200_1:
    properties:
      status:
        type: "integer"
        example: 200
        description: "status code"
      result:
        $ref: "#/definitions/Author"
